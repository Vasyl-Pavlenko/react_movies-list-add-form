{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","tools/UrlChecks.ts","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","title","description","imgUrl","imdbUrl","className","src","alt","target","rel","href","MoviesList","movies","map","imdbId","TextField","name","value","label","required","onChange","isValid","useState","Math","random","toString","slice","id","touched","setToched","valid","setValid","notValid","hasError","htmlFor","classNames","type","placeholder","event","onBlur","itemToValid","pattern","urlCheck","item","test","DEFAULT_EMPTY_FIELDS","NewMovie","onAdd","count","setCount","newMovie","setMovie","curr","isDisabled","onSubmit","preventDefault","disabled","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bf86b7ef.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n  } = movie;\n\n  return (\n\n    <div\n      className=\"card\"\n      data-cy=\"movie-card\"\n    >\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n\n          <div className=\"media-content\">\n            <p className=\"title is-8\">\n              {title}\n            </p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {description}\n          <br />\n          <a\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            href={imdbUrl}\n          >\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange: (name: string, newValue: string) => void,\n  isValid?: (item: string) => boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => { },\n  isValid,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setToched] = useState(false);\n  const [valid, setValid] = useState(true);\n  const notValid = value && !valid;\n  const hasError = touched && required && !value;\n  const handleOnBlur = () => {\n    setToched(true);\n\n    if (isValid) {\n      const itemToValid = isValid(value);\n\n      setValid(itemToValid);\n    }\n  };\n\n  return (\n    <div className=\"field\">\n      <label\n        className=\"label\"\n        htmlFor={id}\n      >\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          name={name}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError || notValid,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.name, event.target.value)}\n          onBlur={handleOnBlur}\n        />\n      </div>\n\n      {notValid && (\n        <p className=\"help is-danger\">{`${label} is not valid`}</p>\n      )}\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nconst pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\nexport const urlCheck = (item: string) => {\n  return pattern.test(item);\n};\n","import React, { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\nimport { urlCheck } from '../../tools/UrlChecks';\n\ntype Props = {\n  onAdd:(newMovie: Movie) => void,\n};\n\nconst DEFAULT_EMPTY_FIELDS = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [newMovie, setMovie] = useState(DEFAULT_EMPTY_FIELDS);\n  const onChange = (name: string, value: string) => {\n    setMovie(curr => ({\n      ...curr,\n      [name]: value,\n    }));\n  };\n\n  const clearForm = () => {\n    setMovie(DEFAULT_EMPTY_FIELDS);\n  };\n\n  const {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  } = newMovie;\n\n  const isDisabled = !title\n    || !imgUrl\n    || !urlCheck(imgUrl)\n    || !urlCheck(imdbUrl)\n    || !imdbUrl\n    || !imdbId;\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    onAdd(newMovie);\n    setCount(curr => curr + 1);\n    clearForm();\n  };\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmit}\n    >\n      <h2 className=\"title\">\n        Add a movie\n      </h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={onChange}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={onChange}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={imgUrl}\n        onChange={onChange}\n        isValid={urlCheck}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={imdbUrl}\n        onChange={onChange}\n        isValid={urlCheck}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={onChange}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isDisabled}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import './App.scss';\nimport { useState } from 'react';\nimport { Movie } from './types/Movie';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport const App = () => {\n  const [movie, setMovie] = useState(moviesFromServer);\n  const onAddNewMovie = (newMovie: Movie) => {\n    setMovie(curr => [\n      ...curr,\n      newMovie,\n    ]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList\n          movies={movie}\n        />\n      </div>\n\n      <div className=\"sidebar\">\n        <NewMovie\n          onAdd={onAddNewMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}